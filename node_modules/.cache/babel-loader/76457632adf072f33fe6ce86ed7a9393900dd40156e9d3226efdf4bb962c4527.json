{"ast":null,"code":"const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"runTransition\", \"backdropTransition\", \"runBackdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { renderTransition } from './ImperativeTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n      show = false,\n      role = 'dialog',\n      className,\n      style,\n      children,\n      backdrop = true,\n      keyboard = true,\n      onBackdropClick,\n      onEscapeKeyDown,\n      transition,\n      runTransition,\n      backdropTransition,\n      runBackdropTransition,\n      autoFocus = true,\n      enforceFocus = true,\n      restoreFocus = true,\n      restoreFocusOptions,\n      renderDialog,\n      renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n      manager: providedManager,\n      container: containerRef,\n      onShow,\n      onHide = () => {},\n      onExit,\n      onExited,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  const hasTransition = !!(transition || runTransition);\n  useImperativeHandle(ref, () => modal, [modal]);\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n  if (!hasTransition && !show && !exited) {\n    setExited(true);\n  } else if (show && exited) {\n    setExited(false);\n  }\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus',\n    // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n    if (onShow) {\n      onShow();\n    }\n\n    // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n    if (autoFocus) {\n      const currentActiveElement = activeElement(document);\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  });\n\n  // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container, /* should never change: */handleShow]);\n\n  // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  });\n\n  // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n    const currentActiveElement = activeElement();\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n  const handleHidden = function () {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...arguments);\n  };\n  if (!container || !(show || hasTransition && !exited)) {\n    return null;\n  }\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n  dialog = renderTransition(transition, runTransition, {\n    unmountOnExit: true,\n    appear: true,\n    in: !!show,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered,\n    children: dialog\n  });\n  let backdropElement = null;\n  if (backdrop) {\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n    backdropElement = renderTransition(backdropTransition, runBackdropTransition, {\n      in: !!show,\n      appear: true,\n      unmountOnExit: true,\n      children: backdropElement\n    });\n  }\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","map":{"version":3,"names":["_excluded","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","key","i","length","indexOf","activeElement","contains","canUseDOM","listen","useState","useRef","useCallback","useImperativeHandle","forwardRef","useEffect","React","ReactDOM","useMounted","useWillUnmount","usePrevious","useEventCallback","ModalManager","useWaitForDOMRef","useWindow","renderTransition","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","manager","getManager","window","ownerDocument","document","useModalManager","provided","modalManager","modal","dialog","backdrop","assign","current","add","remove","isTopModal","setDialogRef","ref","setBackdropRef","Modal","_ref","show","role","className","style","children","keyboard","onBackdropClick","onEscapeKeyDown","transition","runTransition","backdropTransition","runBackdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","props","providedManager","container","containerRef","onShow","onHide","onExit","onExited","onExiting","onEnter","onEntering","onEntered","rest","isMounted","prevShow","exited","setExited","lastFocusRef","hasTransition","handleShow","removeKeydownListenerRef","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","currentActiveElement","focus","handleHide","_lastFocusRef$current","handleBackdropClick","e","currentTarget","keyCode","defaultPrevented","handleHidden","dialogProps","undefined","tabIndex","cloneElement","unmountOnExit","appear","in","backdropElement","onClick","createPortal","displayName","Manager"],"sources":["C:/Users/USER/node_modules/@restart/ui/esm/Modal.js"],"sourcesContent":["const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"runTransition\", \"backdropTransition\", \"runBackdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { renderTransition } from './ImperativeTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n      show = false,\n      role = 'dialog',\n      className,\n      style,\n      children,\n      backdrop = true,\n      keyboard = true,\n      onBackdropClick,\n      onEscapeKeyDown,\n      transition,\n      runTransition,\n      backdropTransition,\n      runBackdropTransition,\n      autoFocus = true,\n      enforceFocus = true,\n      restoreFocus = true,\n      restoreFocusOptions,\n      renderDialog,\n      renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n      manager: providedManager,\n      container: containerRef,\n      onShow,\n      onHide = () => {},\n      onExit,\n      onExited,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  const hasTransition = !!(transition || runTransition);\n  useImperativeHandle(ref, () => modal, [modal]);\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n  if (!hasTransition && !show && !exited) {\n    setExited(true);\n  } else if (show && exited) {\n    setExited(false);\n  }\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus',\n    // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n    if (onShow) {\n      onShow();\n    }\n\n    // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n    if (autoFocus) {\n      const currentActiveElement = activeElement(document);\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  });\n\n  // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container, /* should never change: */handleShow]);\n\n  // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  });\n\n  // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n    const currentActiveElement = activeElement();\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n  if (!container || !(show || hasTransition && !exited)) {\n    return null;\n  }\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n  dialog = renderTransition(transition, runTransition, {\n    unmountOnExit: true,\n    appear: true,\n    in: !!show,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered,\n    children: dialog\n  });\n  let backdropElement = null;\n  if (backdrop) {\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n    backdropElement = renderTransition(backdropTransition, runBackdropTransition, {\n      in: !!show,\n      appear: true,\n      unmountOnExit: true,\n      children: backdropElement\n    });\n  }\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}